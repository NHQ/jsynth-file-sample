{
  "name": "jsynth-file-sample",
  "version": "1.1.0",
  "description": "test audioBufferSource node for web audio API",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "browserify": {
    "transform": "brfs"
  },  
  "devDependencies": {
    "base64-arraybuffer": "",
    "brfs":""
  },
  "repository": "",
  "author": {
    "name": "johnnyscript.us"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "# jsynth-file-sample\n\nThis module will turn your audio file / clip into a Web Audio source node. Use it to create samples.\n\nUse with [browserify](http://github.com/substack/browserify)v.2 and [brfs](http://github.com/substack/brfs)\n\n```\nnpm install jsynth-file-sample\n```\n\n## usage\n\nexample.js - use fs.readFileSync as supported by **brfs**. Use base64 encoding.\n\n```js\nvar fs = require('fs')\n,   fileBuff = require('./')\n,   context = new webkitAudioContext()\n;\n\nvar file = fs.readFileSync('./loop.wav', 'base64'); // <----  \n\nvar sample = fileBuff(context, file);\n\nsample.loop = true;\n\nsample.connect(context.destination)\n\nsample.start(0)\n```\n\nTo run example.js\n```js\nnpm install -g browserify -opa\ngit clone https://github.com/NHQ/jsynth-file-sample\ncd jsynth-file-sample\nopa -n -e example.js\n```\n\n",
  "_id": "jsynth-file-sample@1.0.0",
  "dist": {
    "shasum": "06ff1a92fda678a9465da89de4821a5d4caa917c",
    "tarball": "http://registry.npmjs.org/jsynth-file-sample/-/jsynth-file-sample-1.0.0.tgz"
  },
  "_npmVersion": "1.1.65",
  "_npmUser": {
    "name": "johnnyscript",
    "email": "mostmodernist@gmail.com"
  },
  "maintainers": [
    {
      "name": "johnnyscript",
      "email": "mostmodernist@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "06ff1a92fda678a9465da89de4821a5d4caa917c",
  "_from": "jsynth-file-sample@",
  "_resolved": "https://registry.npmjs.org/jsynth-file-sample/-/jsynth-file-sample-1.0.0.tgz"
}
